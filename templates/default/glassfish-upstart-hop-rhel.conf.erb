#
# Generated by Chef
#
# glassfish - Glassfish Application Server
#
# Reference: http://grimoire.ca/devops/glassfish-and-upstart
#
description     "Glassfish Application Server - <%= @domain_name %> Domain"

start on filesystem or runlevel [2345
stop on runlevel [!2345

# Increase default timeout before killing (on stop) to 10 seconds
kill timeout 50
respawn limit 15 5
umask 0077


pre-start script
  test -f <%= node['glassfish'['base_dir' %>/glassfish/modules/glassfish.jar || { stop; exit 0; }
<%= node.glassfish.base_dir %>/glassfish/bin/asadmin --user <%= node.hopsworks.admin.user %> --passwordfile <%= @password_file %> --terse start-domain --dry-run > <%= node['glassfish'['base_dir' %>/glassfish/bin/start-domain.java_command
perl -pi -e "s/\\n/ /g" <%= node['glassfish'['base_dir' %>/glassfish/bin/start-domain.java_command
chown <%= node.glassfish.user %> <%= node['glassfish'['base_dir' %>/glassfish/bin/start-domain.java_command
echo '#!/bin/sh'  > <%= node.glassfish.base_dir %>/glassfish/bin/upstart-exec.sh 
echo "cd <%= node['glassfish'['domains_dir' %>/<%= @domain_name %>/config" >> <%= node.glassfish.base_dir %>/glassfish/bin/upstart-exec.sh 
cat <%= node['glassfish'['base_dir' %>/glassfish/bin/start-domain.java_command >> <%= node.glassfish.base_dir %>/glassfish/bin/upstart-exec.s
echo "&" >> <%= node.glassfish.base_dir %>/glassfish/bin/upstart-exec.sh 
chmod +x <%= node.glassfish.base_dir %>/glassfish/bin/upstart-exec.sh
chown <%= node.glassfish.user %> <%= node.glassfish.base_dir %>/glassfish/bin/upstart-exec.sh
end script

expect fork
#script
# old version of upstart used on centos - setuid not supported
# su -c will change both the effective user id and group id to that of the glassfish user.
# http://upstart.ubuntu.com/cookbook/#run-a-job-as-a-different-user
#exec su -s /bin/sh -c 'exec "$0" "$@"' <%= node.glassfish.user %> --  

exec su -c "<%= node.glassfish.base_dir %>/glassfish/bin/upstart-exec.sh" <%= node.glassfish.user %> 

# Uglies to wait until the broker is actually up before completion of the 'start'
post-start script
  <% @listen_ports.sort.each do |listen_port| %>
  while [ $(netstat -nl | grep -c '0.0.0.0:<%= listen_port %> ') -eq 0 
  do
      i=$(( $i + 1 ))
      echo -n "."
      if test $i -gt 20; then
          echo "Error"
          stop; exit 42
      fi
      sleep 1
  done
  <% end %>
end script


pre-stop exec <%= node.glassfish.base_dir %>/glassfish/bin/asadmin --user <%= node.hopsworks.admin.user %> --passwordfile <%= @password_file %> stop-domain <%= @domain_name %>

# Uglies to wait until the broker is actually up before completion of the 'stop'
post-stop script
  <% @listen_ports.sort.each do |listen_port| %>
  while [ $(netstat -nl | grep -c '0.0.0.0:<%= listen_port %> ') -ne 0 
  do
      i=$(( $i + 1 ))
      echo -n "."
      if test $i -gt 30; then
          echo "Error"
          stop; exit 42
      fi
      sleep 1
  done
  <% end %>
end script
