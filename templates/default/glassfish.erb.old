#!/bin/sh
#
# Startup script for glassfish
#
### BEGIN INIT INFO
# Provides:                     ndb_node-*
# Required-Start:                 
# Should-Start:                 
# Required-Stop:                  
# Default-Start:                2 3 4 5
# Default-Stop:                 0 1 6
# Short-Description:            start and stop ndb_node-*
# Description:                  Start/Stop/Restart NDB Data Node: ndb_node-*
### END INIT INFO

# Variables
#START_PROG=<%= "#{node[:glassfish][:base_dir]}/scripts/glassfish-start.sh" %>
#STOP_PROG=<%= "#{node[:glassfish][:base_dir]}/scripts/glassfish-stop.sh" %>
#RESTART_PROG=<%= "#{node[:glassfish][:base_dir]}/scripts/glassfish-restart.sh" %>

RETVAL=0

start() {
<%= node[:glassfish][:base_dir] %>/glassfish/bin/asadmin --user <%= node[:hopsworks][:admin][:user] %> --passwordfile <%= @password_file %> --terse start-domain --dry-run > <%= node['glassfish']['base_dir'] %>/glassfish/bin/start-domain.java_command
if [ $? -ne 0 ] ; then 
  exit 2
fi
perl -pi -e "s/\\n/ /g" <%= node['glassfish']['base_dir'] %>/glassfish/bin/start-domain.java_command
echo '#!/bin/sh'  > <%= node[:glassfish][:base_dir] %>/glassfish/bin/upstart-exec.sh 
echo "cd <%= node['glassfish']['domains_dir'] %>/<%= @domain_name %>/config"                                       >> <%= node[:glassfish][:base_dir] %>/glassfish/bin/upstart-exec.sh 
echo "JAVA_COMMAND=\"`cat <%= node['glassfish']['base_dir'] %>/glassfish/bin/start-domain.java_command`\""         >> <%= node[:glassfish][:base_dir] %>/glassfish/bin/upstart-exec.sh 
echo "nohup \${JAVA_COMMAND}&"                                                                                     >> <%= node[:glassfish][:base_dir] %>/glassfish/bin/upstart-exec.sh
echo "PID=\$!"                                                                                                     >> <%= node[:glassfish][:base_dir] %>/glassfish/bin/upstart-exec.sh
echo "c=1"                                                                                                         >> <%= node[:glassfish][:base_dir] %>/glassfish/bin/upstart-exec.sh
echo "while [ ! -d <%= node[:glassfish][:base_dir] %>/glassfish/domains/<%= @domain_name %>/config ]; do"          >> <%= node[:glassfish][:base_dir] %>/glassfish/bin/upstart-exec.sh
echo " if [ $c -gt 20 ] ; then"                                                                                    >> <%= node[:glassfish][:base_dir] %>/glassfish/bin/upstart-exec.sh
echo "   break"                                                                                                    >> <%= node[:glassfish][:base_dir] %>/glassfish/bin/upstart-exec.sh
echo " fi"                                                                                                         >> <%= node[:glassfish][:base_dir] %>/glassfish/bin/upstart-exec.sh
echo " c=$[$c+1]"                                                                                                  >> <%= node[:glassfish][:base_dir] %>/glassfish/bin/upstart-exec.sh
echo "done"                                                                                                        >> <%= node[:glassfish][:base_dir] %>/glassfish/bin/upstart-exec.sh
echo "echo \"\$PID\" > <%= node[:glassfish][:base_dir] %>/glassfish/domains/<%= @domain_name %>/config/glassfish.pid" >> <%= node[:glassfish][:base_dir] %>/glassfish/bin/upstart-exec.sh
chown <%= node[:glassfish][:user] %> <%= node[:glassfish][:base_dir] %>/glassfish/bin/upstart-exec.sh
chmod +x <%= node[:glassfish][:base_dir] %>/glassfish/bin/upstart-exec.sh
su -c "<%= node[:glassfish][:base_dir] %>/glassfish/bin/upstart-exec.sh" <%= node[:glassfish][:user] %> 
return $?
  # <% @listen_ports.sort.each do |listen_port| %>
  # while [ $(netstat -nl | grep -c '0.0.0.0:<%= listen_port %>') -eq 0 ]
  # do
  #     i=$(( $i + 1 ))
  #     echo -n "."
  #     if test $i -gt 60; then
  #         echo "Error"
  #         stop; exit 42
  #     fi
  #     sleep 1
  # done
  # <% end %>

}

stop() {
su -c "<%= node[:glassfish][:base_dir] %>/glassfish/bin/asadmin --user <%= node[:hopsworks][:admin][:user] %> --passwordfile <%= @password_file %> stop-domain <%= @domain_name %>" <%= node[:glassfish][:user] %> 
  return $?
}

restart() {
  echo "Restarting"
  stop
  start
  return $?
}

status() {  
  ID=<%= @node_id %>
  PID_FILE=<%= node[:glassfish][:base_dir] %>/glassfish/domains/#{domain_name}/config/glassfish.pid
  if [ -f $PID_FILE ] ; then
     PID=`cat $PID_FILE`
     kill -0 $PID
     res=$?
  else 
     res=1
  fi
  if [ $res -eq 0 ] ; then
   echo "glassfish($PID) is running"
  else
   echo "glassfish is not running"
  fi
  return $res
}

# user-supplied parameter to stop/start/restart process.
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  reload)
    restart
    ;;
  status)
    status
    ;;
  -h|--help)
    echo ""
    echo "usage: <prog> start|stop|restart|status"
    echo ""
    exit 0
    ;;
  *)
    echo $"Usage: <prog> {start|stop|restart|status}"
    exit 1
  esac


exit $RETVAL
